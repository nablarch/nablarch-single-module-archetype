##
## 開発環境用設定ファイル
##

# JDBC接続ドライバクラス
# (TODO: 使用するDBに合わせて変更する。)
nablarch.db.jdbcDriver=org.h2.Driver

# JDBC接続URL
# (TODO: 接続先に変更する。H2の接続URLは、データファイルの所在とユーザ名で決定される。変更する際は、理解したうえで変更すること)
nablarch.db.url=jdbc:h2:./h2/db/SAMPLE

# DB接続ユーザ名
# (TODO: ユーザ名を変更する)
nablarch.db.user=SAMPLE

# DB接続パスワード
# (TODO: パスワードを変更する)
nablarch.db.password=SAMPLE

# DBスキーマ名
# (TODO: 自動テスト用のスキーマ名に変更する。H2使用時は「PUBLIC」を設定すること)
nablarch.db.schema=PUBLIC

# 最大プールサイズ
nablarch.db.maxPoolSize=5

# 最小アイドル数
nablarch.db.minimumIdle=5

# プールから接続を取得するときのタイムアウト時間(ミリ秒)
nablarch.db.connectionTimeout=30000

# 接続のアイドルが維持される時間(ミリ秒)
nablarch.db.idleTimeout=600000

# プール内のコネクションの最大生存時間(ミリ秒)
nablarch.db.maxLifetime=1800000

# 接続が生きていることを確認するときのタイムアウト時間(ミリ秒)
nablarch.db.validationTimeout=5000

# コードの初期ロード設定
# (本番ではレスポンスを重視し true を設定して初期ロードを実施する。開発環境では起動速度を重視し false を設定して初期ロードはしない。)
nablarch.codeCache.loadOnStartUp=false

# メッセージの初期ロード設定
# (本番ではレスポンスを重視し true を設定して初期ロードを実施する。開発環境では起動速度を重視し false を設定して初期ロードはしない。)
nablarch.stringResourceCache.loadOnStartup=false

# ルートマッピング定義の再読み込みの設定。以下タイミングで再読み込みを行う。
# ・最後にルートマッピングを読み込んでから、本値(秒)の時間経過していること。
# ・上記を満たした状態で、URLとActionのマッピング処理が発生したとき
# (本番ではパフォーマンスを重視し、0を設定する。0の場合は、自動再読み込みは行わない)
nablarch.routesMapping.checkInterval=5

# フォーマット定義ファイルの格納ディレクトリ
nablarch.filePathSetting.basePathSettings.format=file:./src/main/jib/var/nablarch/format

# 出力ファイルの出力先ディレクトリ
nablarch.filePathSetting.basePathSettings.output=file:./work/output

# アップロードファイルの自動クリーニングを行うかどうか
# (ディスクを逼迫するので本番環境ではtrue。開発環境ではファイルを確認できるようにfalseとする。)
nablarch.uploadSettings.autoCleaning=false

# アップロードファイル一時ディレクトリ
nablarch.filePathSetting.basePathSettings.uploadFileTmpDir=file:./work/tmp
