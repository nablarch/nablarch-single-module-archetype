<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!--
    nablarch-archetypeの親pom。
   プロジェクト非依存の設定を行う。
    * Mavenプラグインの共通設定

   生成されたarchetypeのparentは、このpomを親とする。
  -->

  <groupId>com.nablarch.archetype</groupId>
  <artifactId>nablarch-archetype-parent</artifactId>
  <version>5u11</version>
  <packaging>pom</packaging>

  <name>nablarch-archetype-parent</name>
  <description>Nablarch Framework.</description>
  <url>https://github.com/nablarch</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>nablarch</id>
      <name>Nablarch</name>
      <email>nablarch@tis.co.jp</email>
      <organization>Nablarch</organization>
      <organizationUrl>https://github.com/nablarch</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/nablarch/nablarch/nablarch-single-module-archetype.git</connection>
    <developerConnection>scm:git:ssh://github.com/nablarch/nablarch/nablarch-single-module-archetype.git</developerConnection>
    <url>https://github.com/nablarch/nablarch-single-module-archetype/tree/master</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <version.plugins.gsp.dba>4.3.0</version.plugins.gsp.dba>
    <version.plugins.compiler>3.2</version.plugins.compiler>
    <version.plugins.surefire>2.18</version.plugins.surefire>
    <version.plugins.antrun>1.7</version.plugins.antrun>
    <version.plugins.war>2.5</version.plugins.war>
    <version.plugins.assembly>2.5.1</version.plugins.assembly>
    <version.plugins.clean>2.5</version.plugins.clean>
    <version.plugins.deploy>2.8.2</version.plugins.deploy>
    <version.plugins.dependency>2.9</version.plugins.dependency>
    <version.plugins.failsafe>2.18</version.plugins.failsafe>
    <version.plugins.install>2.5.2</version.plugins.install>
    <version.plugins.jar>2.5</version.plugins.jar>
    <version.plugins.javadoc>2.10.1</version.plugins.javadoc>
    <version.plugins.resources>2.7</version.plugins.resources>
    <version.plugins.source>2.4</version.plugins.source>
    <version.plugins.jacoco>0.7.2.201409121644</version.plugins.jacoco>
    <version.plugins.build-helper-maven>1.9.1</version.plugins.build-helper-maven>

    <!-- toolsディレクトリへのパス -->
    <nablarch.tools.dir>${project.basedir}/tools</nablarch.tools.dir>

    <!-- JSP静的解析ツールの設定項目 -->
    <jspanalysis.checkjspdir>${project.basedir}/src/main/webapp</jspanalysis.checkjspdir>
    <jspanalysis.xmloutput>${project.basedir}/target/jspanalysis-result.xml</jspanalysis.xmloutput>
    <jspanalysis.checkconfig>${nablarch.tools.dir}/static-analysis/jspanalysis/config.txt</jspanalysis.checkconfig>
    <jspanalysis.charset>UTF-8</jspanalysis.charset>
    <jspanalysis.lineseparator>\n</jspanalysis.lineseparator>
    <jspanalysis.htmloutput>${project.basedir}/target/jspanalysis-result.html</jspanalysis.htmloutput>
    <jspanalysis.xsl>${nablarch.tools.dir}/static-analysis/jspanalysis/transform-to-html.xsl</jspanalysis.xsl>
    <jspanalysis.additionalexts>tag</jspanalysis.additionalexts>


    <!--
     gsp-dba-maven-pluginでEntityクラスを生成するパッケージ名。
     デフォルトでは、Entityクラスは "${project.groupId}.entity" に生成されます。
    -->
    <dba.gsp-target-dir>gsp-target</dba.gsp-target-dir>
    <dba.entity.rootPackage>${project.groupId}</dba.entity.rootPackage>
    <dba.entity.entityPackage>entity</dba.entity.entityPackage>
    <dba.entity.javaFileDestDir>${dba.gsp-target-dir}/generated-sources/entity</dba.entity.javaFileDestDir>
    <dba.dataDirectory>src/test/resources/data</dba.dataDirectory>
    <dba.erdFile>src/main/resources/entity/data-model.edm</dba.erdFile>
    <!-- GSPのdumpファイルのバージョン。デフォルト設定では、プロジェクトのバージョンである。-->
    <dba.dump.version>${project.version}</dba.dump.version>
    <dba.testDataArtifactId>${project.artifactId}-testdata</dba.testDataArtifactId>

    <release.allow.snapshot>false</release.allow.snapshot>

  </properties>


  <build>
    <pluginManagement>
      <plugins>
        <!-- Nablarch提供のMavenプラグイン -->
        <plugin>
          <groupId>jp.co.tis.gsp</groupId>
          <artifactId>gsp-dba-maven-plugin</artifactId>
          <version>${version.plugins.gsp.dba}</version>
          <configuration>
            <dataDirectory>${dba.dataDirectory}</dataDirectory>
            <erdFile>${dba.erdFile}</erdFile>
            <lengthSemantics>CHAR</lengthSemantics>
            <outputDirectory>${dba.gsp-target-dir}/output</outputDirectory>
            <inputDirectory>${dba.gsp-target-dir}/output</inputDirectory>
            <ddlDirectory>${dba.gsp-target-dir}/output</ddlDirectory>
            <diconDir>${dba.gsp-target-dir}/classes</diconDir>
            <rootPackage>${dba.entity.rootPackage}</rootPackage>
            <entityPackageName>${dba.entity.entityPackage}</entityPackageName>
            <useAccessor>true</useAccessor>
            <javaFileDestDir>${dba.entity.javaFileDestDir}</javaFileDestDir>
            <driver>${nablarch.db.jdbcDriver}</driver>
            <url>${nablarch.db.url}</url>
            <adminUser>${nablarch.db.adminUser}</adminUser>
            <adminPassword>${nablarch.db.adminPassword}</adminPassword>
            <user>${nablarch.db.user}</user>
            <password>${nablarch.db.password}</password>
            <schema>${nablarch.db.schema}</schema>
            <!-- 以下はimport-schemaゴール用のパラメータ -->
            <artifactId>${dba.testDataArtifactId}</artifactId>
          </configuration>
          <dependencies>
           <!-- プロジェクトで使用するDB製品にあわせたJDBCドライバに上書きする -->
            <dependency>
              <groupId>com.h2database</groupId>
              <artifactId>h2</artifactId>
              <version>1.3.176</version>
              <scope>runtime</scope>
            </dependency>
          </dependencies>
        </plugin>
        <!--
          Mavenの各フェーズで自動実行するように設定するゴールについて、Eclipseのm2eプラグインがどのように扱うかを設定しておく。
          設定しないと、プロジェクトをEclipseに取り込んだ際に、"Plugin execution not covered by lifecycle configuration”という
          エラーが発生するため。
          参考） https://www.eclipse.org/m2e/documentation/m2e-execution-not-covered.html
        -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>jp.co.tis.gsp</groupId>
                    <artifactId>gsp-dba-maven-plugin</artifactId>
                    <versionRange>${version.plugins.gsp.dba}</versionRange>
                    <goals>
                      <goal>execute-ddl</goal>
                      <goal>export-schema</goal>
                      <goal>generate-ddl</goal>
                      <goal>generate-entity</goal>
                      <goal>generate-enum</goal>
                      <goal>generate-minor-ddl</goal>
                      <goal>generate-service</goal>
                      <goal>import-schema</goal>
                      <goal>load-data</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <!-- gsp-dba-maven-plugin は、Eclipseビルド時に実行される必要はない。 -->
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>run</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <!--
                      JSP静的解析ツールの実行は、Eclipseのビルド時には除外。
                    -->
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <versionRange>[0.7,)</versionRange>
                    <goals>
                      <goal>prepare-agent</goal>
                      <goal>prepare-agent-integration</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

        <!-- Maven提供のプラグイン -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${version.plugins.antrun}</version>
          <executions>
            <execution>
              <!-- verifyフェーズでJSP静的解析ツールを実行する。 -->
              <id>verify-jsp</id>
              <phase>verify</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <ant antfile="${nablarch.tools.dir}/nablarch-tools.xml" dir="${nablarch.tools.dir}" inheritRefs="true">
                    <target name="analyzeJsp" />
                  </ant>
                </target>
              </configuration>
            </execution>
            <execution>
              <!-- antrun:run で実行するために、id を default-cli にしておく。 -->
              <id>default-cli</id>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <property name="configgen.outputBaseDir" value="${env.resources}" />
                  <property name="executed.project.basedir" value="${project.basedir}" />
                  <ant antfile="${nablarch.tools.dir}/nablarch-tools.xml" dir="${nablarch.tools.dir}" inheritRefs="true">
                    <target name="${target}" />
                  </ant>
                </target>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>com.nablarch.tool</groupId>
              <artifactId>nablarch-toolbox</artifactId>
              <version>1.0.2</version>
              <exclusions>
                <exclusion>
                  <groupId>ant</groupId>
                  <artifactId>ant</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.plugins.compiler}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.plugins.surefire}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${version.plugins.war}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${version.plugins.assembly}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${version.plugins.clean}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${version.plugins.dependency}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.plugins.failsafe}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${version.plugins.jar}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${version.plugins.resources}</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${version.plugins.jacoco}</version>
          <executions>
            <execution>
              <id>prepare-jacoco-runtime-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>prepare-jacoco-runtime-agent-for-integration-test</id>
              <goals>
                <goal>prepare-agent-integration</goal>
              </goals>
            </execution>
            <!-- SonarQubeやJenkinsで結果を見る場合、カバレッジレポートの出力は不要。 -->
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${version.plugins.source}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${version.plugins.javadoc}</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <phase>none</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${version.plugins.build-helper-maven}</version>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals><goal>add-source</goal></goals>
              <configuration>
                <sources>
                  <source>${dba.entity.javaFileDestDir}</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.1</version>
        <configuration>
          <tagNameFormat>@{project.version}</tagNameFormat>
          <allowTimestampedSnapshots>${release.allow.snapshot}</allowTimestampedSnapshots>
        </configuration>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>3.0.0</version>
      </extension>
    </extensions>
  </build>


  <profiles>
    <profile>
      <id>ossrh</id>
      <distributionManagement>
        <repository>
          <id>nablarch.staging</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
        </repository>
        <snapshotRepository>
          <id>nablarch.snapshot</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
      </distributionManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.2.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.9.1</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
</project>
